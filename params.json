{
  "name": "vim-glsl",
  "tagline": "",
  "body": "# glsl.vim\r\n\r\nProvides basic functionality such as syntax highlighting or code folding\r\nfor standard OpenGL ES 1.0 shaders, and for additional directives used in\r\n[three.js](https://github.com/mrdoob/three.js/) (for example, `#include`).\r\n\r\nSupported file extensions: `.glsl`, `.vs`, `.fs`\r\n\r\n![Demo](https://github.com/petrbroz/vim-glsl/blob/gh-pages/images/screencast.gif?raw=true)\r\n\r\n## Requirements\r\n\r\n- [Vim 8](https://github.com/vim/vim/blob/master/runtime/doc/version8.txt)\r\n\r\n## Installation\r\n\r\nClone this repo in your Vim's package folder:\r\n```bash\r\nmkdir -p ~/.vim/pack\r\ncd ~/.vim/pack\r\ngit clone git://github.com/petrbroz/vim-glsl.git\r\n```\r\n\r\n## Features\r\n\r\n#### Syntax highlighting\r\n\r\n#### Code folding\r\n\r\nBased on cindent.\r\n\r\n#### Reference documentation\r\n\r\nThe built-in variables, constants, and functions of OpenGL ES GLSL are documented\r\nusing vim's docs format, so you can look up the documentation using something like\r\n`:h texture2D()`, or just hit `K` while the cursor is on the function.\r\n\r\n#### Autocomplete\r\n\r\nThe same reference documentation mentioned above is used to provide the user-defined\r\nautocompletion. Hit `ctrl-x` `ctrl-u` while in insert mode to invoke it. If you want\r\nto use omnicompletion instead (`ctrl-x` `ctrl-o`), add the following line to your\r\n_.vimrc_ file:\r\n\r\n```vim\r\nset omnifunc=glsl#CompleteFunc\r\n```\r\n\r\n#### Go to shader chunk\r\n\r\nWith cursor inside the brackets of the `#include<foo>` directive, `gf` will try to find\r\n_foo.glsl_, _foo.vs_, or _foo.fs_ in the subtree of the current working directory.\r\n\r\n## License\r\n\r\nDistributed under the same terms as Vim. See `:help license`.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}